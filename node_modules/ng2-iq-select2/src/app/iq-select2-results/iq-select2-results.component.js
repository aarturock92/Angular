"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require('@angular/core');
var IqSelect2ResultsComponent = (function () {
    function IqSelect2ResultsComponent() {
        this.itemSelectedEvent = new core_1.EventEmitter();
        this.activeIndex = 0;
        this.ussingKeys = false;
    }
    IqSelect2ResultsComponent.prototype.ngOnInit = function () {
    };
    IqSelect2ResultsComponent.prototype.onItemSelected = function (item) {
        this.itemSelectedEvent.emit(item);
    };
    IqSelect2ResultsComponent.prototype.activeNext = function () {
        if (this.activeIndex >= this.items.length - 1) {
            this.activeIndex = this.items.length - 1;
        }
        else {
            this.activeIndex++;
        }
        this.scrollToElement();
        this.ussingKeys = true;
    };
    IqSelect2ResultsComponent.prototype.activePrevious = function () {
        if (this.activeIndex - 1 < 0) {
            this.activeIndex = 0;
        }
        else {
            this.activeIndex--;
        }
        this.scrollToElement();
        this.ussingKeys = true;
    };
    IqSelect2ResultsComponent.prototype.scrollToElement = function () {
        var element = document.getElementById('item_' + this.activeIndex);
        var container = document.getElementById('resultsContainer');
        if (element) {
            container.scrollTop = element.offsetTop;
        }
    };
    IqSelect2ResultsComponent.prototype.selectCurrentItem = function () {
        if (this.items[this.activeIndex]) {
            this.onItemSelected(this.items[this.activeIndex]);
            this.activeIndex = 0;
        }
    };
    IqSelect2ResultsComponent.prototype.onMouseOver = function (index) {
        if (!this.ussingKeys) {
            this.activeIndex = index;
        }
    };
    IqSelect2ResultsComponent.prototype.onHovering = function (event) {
        this.ussingKeys = false;
    };
    IqSelect2ResultsComponent.prototype.isSelected = function (currentItem) {
        var result = false;
        this.selectedItems.forEach(function (item) {
            if (item.id === currentItem.id) {
                result = true;
            }
        });
        return result;
    };
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Array)
    ], IqSelect2ResultsComponent.prototype, "items", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Boolean)
    ], IqSelect2ResultsComponent.prototype, "searchFocused", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Array)
    ], IqSelect2ResultsComponent.prototype, "selectedItems", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', core_1.TemplateRef)
    ], IqSelect2ResultsComponent.prototype, "templateRef", void 0);
    __decorate([
        core_1.Output(), 
        __metadata('design:type', core_1.EventEmitter)
    ], IqSelect2ResultsComponent.prototype, "itemSelectedEvent", void 0);
    IqSelect2ResultsComponent = __decorate([
        core_1.Component({
            selector: 'iq-select2-results',
            templateUrl: 'iq-select2-results.component.html',
            styleUrls: ['iq-select2-results.component.css']
        }), 
        __metadata('design:paramtypes', [])
    ], IqSelect2ResultsComponent);
    return IqSelect2ResultsComponent;
}());
exports.IqSelect2ResultsComponent = IqSelect2ResultsComponent;
//# sourceMappingURL=iq-select2-results.component.js.map